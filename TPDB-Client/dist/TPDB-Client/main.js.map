{"version":3,"sources":["./src/app/shared/components/main-layout/main-layout.component.ts","./src/app/shared/components/main-layout/main-layout.component.html","./src/environments/environment.ts","./src/app/shared/services/auth.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/commodities/commodities.component.ts","./src/app/commodities/commodities.component.html","./src/app/app.module.ts","./src/app/ports/ports.component.ts","./src/app/ports/ports.component.html","./src/app/shared/app-injection-tokens.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login-dialog.component.html","./src/app/login/login.component.html","./src/main.ts","./src/app/products/products.component.ts","./src/app/products/products.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.scss']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <span>Trade port DB</span>\n  <span class=\"toolbar-space\"></span>\n  <app-login></app-login>\n</mat-toolbar>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  authApi: 'http://localhost:58833/',\n  resApi: 'http://localhost:64831/',\n  tokenAllowedDomains: ['localhost:64831']\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {APIResponse, User} from '../interfaces/interfaces';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {AUTH_API_URL} from '../app-injection-tokens';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {Router} from '@angular/router';\n\nexport const LOCAL_TOKEN_KEY = 'tpdb_access_token';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient,\n              @Inject(AUTH_API_URL) private apiUrl: string,\n              private jwtHelper: JwtHelperService,\n              private router: Router) {\n  }\n\n  login(user: User): Observable<APIResponse> {\n    user.returnJWTToken = true;\n    return this.http.post(`${this.apiUrl}api/auth/login`, user)\n      .pipe(\n        tap(this.setToken)\n      );\n  }\n\n  logout(): void {\n\n  }\n\n  isAuthenticated(): boolean {\n    const token = localStorage.getItem(LOCAL_TOKEN_KEY);\n    return token && !this.jwtHelper.isTokenExpired(token);\n  }\n\n  private setToken(response: APIResponse): void {\n    console.log(response)\n    localStorage.setItem(LOCAL_TOKEN_KEY, response.accessToken);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'TPDB-Client';\n}\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-commodities',\n  templateUrl: './commodities.component.html',\n  styleUrls: ['./commodities.component.scss']\n})\nexport class CommoditiesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>commodities works!</p>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {PortsComponent} from './ports/ports.component';\nimport {ProductsComponent} from './products/products.component';\nimport {CommoditiesComponent} from './commodities/commodities.component';\nimport {MainLayoutComponent} from './shared/components/main-layout/main-layout.component';\n\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {LoginComponent, LoginDialogComponent} from './login/login.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {AUTH_API_URL, RES_API_URL} from './shared/app-injection-tokens';\nimport {environment} from '../environments/environment';\nimport {JwtModule} from '@auth0/angular-jwt';\nimport {LOCAL_TOKEN_KEY} from './shared/services/auth.service';\n\nexport function tokenGetter(): string {\n  return localStorage.getItem(LOCAL_TOKEN_KEY);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PortsComponent,\n    ProductsComponent,\n    CommoditiesComponent,\n    MainLayoutComponent,\n    LoginComponent,\n    LoginDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatToolbarModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n\n    JwtModule.forRoot({\n      config: {tokenGetter,\n      allowedDomains: environment.tokenAllowedDomains}\n    })\n  ],\n  providers: [{\n    provide: AUTH_API_URL,\n    useValue: environment.authApi\n  }, {\n    provide: RES_API_URL,\n    useValue: environment.resApi\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ports',\n  templateUrl: './ports.component.html',\n  styleUrls: ['./ports.component.scss']\n})\nexport class PortsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ports works!</p>\n","import {InjectionToken} from '@angular/core';\r\n\r\nexport const AUTH_API_URL = new InjectionToken('auth api url');\r\nexport const RES_API_URL = new InjectionToken('resource server api url');\r\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {MainLayoutComponent} from './shared/components/main-layout/main-layout.component';\nimport {PortsComponent} from './ports/ports.component';\nimport {ProductsComponent} from './products/products.component';\nimport {CommoditiesComponent} from './commodities/commodities.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: MainLayoutComponent, children: [\n      {path: '', redirectTo: '/ports', pathMatch: 'full'},\n      {path: 'ports', component: PortsComponent},\n      {path: 'products', component: ProductsComponent},\n      {path: 'commodities', component: CommoditiesComponent}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {User} from '../shared/interfaces/interfaces';\nimport {AuthService} from '../shared/services/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  private email = '';\n  private password = '';\n\n  constructor(public dialog: MatDialog, private router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(LoginDialogComponent,\n      {\n        width: '300px',\n        data: {login: this.email, password: this.password}\n      }\n    );\n\n    dialogRef.afterClosed().subscribe((result) => {\n    });\n  }\n}\n\n@Component({\n  selector: 'app-login-dialog',\n  templateUrl: './login-dialog.component.html',\n  styleUrls: ['./login-dialog.component.scss']\n})\nexport class LoginDialogComponent {\n  form: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<LoginDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: User,\n    private auth: AuthService) {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.email, Validators.required]),\n      password: new FormControl(null, [Validators.minLength(4), Validators.required])\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submit(): void {\n    if (this.form.invalid) {\n      return;\n    }\n\n    const data: User = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n      returnJWTToken: false\n    };\n\n    this.auth.login(data).subscribe();\n  }\n}\n\n\n","<h1 mat-dialog-title>Войдите в систему</h1>\r\n<form (ngSubmit)=\"submit()\" [formGroup]=\"form\">\r\n  <div mat-dialog-content>\r\n    <mat-form-field>\r\n      <mat-label>Login</mat-label>\r\n      <input type=\"text\" matInput formControlName=\"email\">\r\n      <mat-error\r\n        *ngIf=\"form.get('email')!.touched && form.get('email').invalid\"\r\n      >\r\n        <span *ngIf=\"form.get('email').errors.required\">\r\n          Поле логина может быть пустым\r\n        </span>\r\n        <span *ngIf=\"form.get('email').errors.email\">\r\n          Введите корректный e-mail\r\n        </span>\r\n      </mat-error>\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>Password</mat-label>\r\n      <input type=\"password\" matInput formControlName=\"password\">\r\n      <mat-error\r\n        *ngIf=\"form.get('password')!.touched && form.get('password').invalid\"\r\n      >\r\n        <span *ngIf=\"form.get('password').errors.required\">\r\n          Поле пароля не может быть пустым\r\n        </span>\r\n        <span *ngIf=\"form.get('password').errors.minlength\">\r\n          Пароль должен быть длиннее 4 симвовов\r\n        </span>\r\n      </mat-error>\r\n    </mat-form-field>\r\n  </div>\r\n  <div mat-dialog-actions>\r\n    <button mat-button (click)=\"onNoClick()\">Отменить</button>\r\n    <button mat-button\r\n            type=\"submit\"\r\n            [disabled]=\"form.invalid\">\r\n      Ok\r\n    </button>\r\n  </div>\r\n</form>\r\n\r\n","<button mat-icon-button\n        class=\"login-icon\"\n        aria-label=\"Login icon\"\n        (click)=\"openDialog()\">\n  <mat-icon>login</mat-icon>\n</button>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>products works!</p>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}